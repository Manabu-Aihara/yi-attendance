version: '3'

services:
  # api:
  #   build: .
  #   ports:
  #     - "5000:5000"
  #   volumes:
  #     - "./:/var/www/html"
  #   workdir: /var/www/html
  #   tty: true
  #   environment:
  #     TZ: Asia/Tokyo
  #     FLASK_APP: run.py
  #     FLASK_ENV: development
  #   command: flask run -h 0.0.0.0
  db:
    image: mysql:8
    build: ./mysql/
    volumes:
      - ./mysql/mysql_data:/var/lib/mysql # データの永続化
      - ./mysql/sqls:/docker-entrypoint-initdb.d # 初期データ投入
      - ./mysql/logs:/var/log/mysql
      # - ./restore:/opt/restore
    environment:
      MYSQL_ROOT_PASSWORD: honbu*0987A
      MYSQL_DATABASE: local_cat_db
      MYSQL_USER: user
      MYSQL_PASSWORD: passw0rd
    networks:
      fixed_compose_network:
        ipv4_address: 192.168.80.2
  # appserver:
  #   build: ./app/
  #   ports:
  #     - 8085:5000
  #   volumes:
  #     - .:/workdir
  #   environment:
  #     TZ: Asia/Tokyo
  #   # command: flask run -h 0.0.0.0
  #   # command: gunicorn -w 2 -b 0.0.0.0 main.app
  #   tty: true
  #   stdin_open: true
  #   links:
  #     - db
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    build: ./phpmyadmin/
    container_name: "phpmyadmin"
    restart: always
    depends_on:
      - db
    ports:
      - 127.0.0.1:8091:80
    environment:
      # PMA_ARBITRARY=1を指定してあげると、サーバーをローカル以外も指定ができるようになる。
      - PMA_ARBITRARY=1
      - PMA_HOSTS=db
      # ユーザー名とパスワードを指定すると、入力しなくて済むようになる。
      - PMA_USER=root
      - PMA_PASSWORD=honbu*0987A
      - TZ=Asia/Tokyo #ログ用のタイムゾーン
    volumes:
      - "./phpmyadmin/sessions:/sessions"
    networks:
      fixed_compose_network:
        ipv4_address: 192.168.80.12


networks:
  fixed_compose_network:
    ipam:
      driver: default
      config:
        - subnet: 192.168.80.0/24